version: "3.7"

services:
  rabbitmq:
    image: rabbitmq:3.11.17-management-alpine
    container_name: 'rabbitmq'
    restart: always
    environment:
      - "RABBITMQ_DEFAULT_USER=username"
      - "RABBITMQ_DEFAULT_PASS=password"
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - backend_services
  aks-store-demo-order-service:
    container_name: 'order-service'
    image: aks-store-demo-order-service
    ports:
      - 3000:3000
    networks:
      - backend_services
  store-front:
    container_name: 'store-front'
    image: aks-store-demo-store-front:latest
    restart: always
    ports:
      - 8080:8080
    networks:
      - backend_services
  product-service:
    container_name: 'product-service'
    image: aks-store-demo-product-service:latest
    restart: always
    ports:
      - 3002:3002
    networks:
      - backend_services
  prometheus:
    container_name: 'prometheus'
    image: prom/prometheus:v2.48.0
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
    - cadvisor
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - --web.listen-address=0.0.0.0:9090
    ports:
      - 9090:9090
    networks:
      - backend_services
  cadvisor:
    container_name: 'cadvisor'
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    restart: unless-stopped
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock:ro
#      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    privileged: true
    command:
    - '-port=80'
    ports:
      - 80:80
    networks:
      - backend_services
  alpine:
    container_name: 'alpine'
    image: alpine:latest
    restart: unless-stopped
    command: sh -c "apk add --no-cache openssl && openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /certs/grafana.key -out /certs/grafana.crt -subj '/CN=localhost' && chmod 644 /certs/grafana.key /certs/grafana.crt && sleep 365d"
    volumes:
      - certs:/certs
    networks:
      - backend_services
  grafana:
    container_name: 'grafana'
    image: grafana/grafana:10.2.2 
    restart: unless-stopped
    volumes:
      - ./grafana.yml:/etc/grafana/provisioning/datasources/datasource.yml:ro
      - ./dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml:ro
      - ./dasboard.json:/etc/grafana/provisioning/dashboards/dashboard2.json:ro
      - certs:/etc/grafana/certs/
    environment:
      - GF_SERVER_HTTP_PORT=10
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SERVER_PROTOCOL=https
      - GF_INSTALL_PLUGINS=grafana-clock-panel
      - GF_SERVER_CERT_FILE=/etc/grafana/certs/grafana.crt
      - GF_SERVER_CERT_KEY=/etc/grafana/certs/grafana.key
      - GF_SERVER_ROOT_URL=https://0.0.0.0:10
    depends_on:
      - alpine
      - prometheus
    ports:
      - 10:10
    networks:
      - backend_services
networks:
  backend_services:
    driver: bridge

volumes:
  certs:

name: build test
on: 
  push:
  workflow_dispatch:

jobs:
  hello_world_job:
    runs-on: ubuntu-latest
    name: A job to say hello
    steps:
      - uses: actions/checkout@v4
      - id: foo
        uses: mudler/localai-github-action@v1
        with:
          model: 'hermes-2-theta-llama-3-8b' # Any from models.localai.io, or from huggingface.com with: "huggingface://<repository>/file"
      - run: |
         sudo curl -sS -o spilot_install.sh https://raw.githubusercontent.com/reid41/shell-pilot/main/spilot_install.sh
      - name: Modifier spilot_install.sh pour contourner la validation IP 
        run: | # Commenter la ligne de validation de l'adresse IP dans la fonction add_server_ip 
           sudo sed -i 's/^if \[\[ \$ip_address =~/# if \[\[ \$ip_address =~/' spilot_install.sh
      - run: |
          (echo "127.0.0.1" && echo "127.0.0.1") | sudo bash spilot_install.sh
      - run: |
          export TERM=dumb
          sudo s-pilot cmp localai
          s-pilot h
      - run: |
          export TERM=dumb
          sudo s-pilot m hermes-2-theta-llama-3-8b
          
      - run: export TERM=dumb && s-pilot lm
      - run: export TERM=dumb && s-pilot lc
      - run: |
          export TERM=dumb
          s-pilot p "bonjour si j'utilise localai avec modèle llama et shell-pilot avec cmd:. Comment utiliser Shell-pilot avec cmd: avec ci/cd? repond en français.m" 
      - run: |
          export TERM=dumb
          (echo "cmd:fais ls" && echo "Yes" && echo "Yes" && echo "Yes" ) |  s-pilot
      - run: |
          export TERM=dumb
          echo "ls" | s-pilot
      - run: |
          export TERM=dumb
          echo "Affiche ce qu'il y a dans les fichiers avec les infos dans le répertoire ou je suis" | s-pilot  
      - name: Greet
        id: greet
        run: |
                input="Génére moi un code complet en js et css dans un seul fichier d'une application web microservice de front seulement de site web de magasin de livre qui fonctionne. les livres ainsi que le back seront dans d'autres microsercive que l'on ne s'occupe pas. ce code demander a une page d'accueil avec tout les livre pour les mettre aux panier et une page panier qui resume les livre au panier. l'apli est très simple mais est utilisable. Repond avec uniquement du code donc pas de bonjour de phrase avant le code ou apres ou explication ou commentaire et tout le code est dans le meme fichier"

                # Define the LocalAI API endpoint
                API_URL="http://localhost:8080/chat/completions"

                # Create a JSON payload using jq to handle special characters
                json_payload=$(jq -n --arg input "$input" '{
                model: "'$MODEL_NAME'",
                messages: [
                    {
                    role: "system",
                    content: "You are a developer who provides code functional without additional explanations or comments"
                    },
                    {
                    role: "user",
                    content: $input
                    }
                ]
                }')

                # Send the request to LocalAI
                response=$(curl -s -X POST $API_URL \
                -H "Content-Type: application/json" \
                -d "$json_payload")

                # Extract the result from the response
                result="$(echo $response | jq -r '.choices[0].message.content')"

                 # Print the result
                 echo "Result:"
                 echo "$result" 
                 temp_file=$(mktemp)
                 printf "%s" "$result" > "$temp_file"
                 mv "$temp_file" result.html                            
                # now the output can be consumed with ${{ steps.greet.outputs.message }} by other steps
                    
      - name: test2
        run: cat result.html

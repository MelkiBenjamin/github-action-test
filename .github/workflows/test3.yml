name: test g
on:
  workflow_dispatch:
  push:

jobs:
    wireguard:
        runs-on: ubuntu-latest
        steps:
        - name: date
          run: date
        - name: date 1
          run: docker -v
        - name: date 1
          run: docker -v
#        - name: Checkout
#          uses: actions/checkout@v4

        - name: test curl
          run: curl https://8.8.8.8

        - name: test action
          uses: codetalkio/expose-tunnel@v1.5.0
          id: expose-tunnel
          with:
           service: bore.pub
           port: 6443

        - name: Log tunnel URL
          run: |
            echo "Tunnel URL:"
            echo "${{ steps.expose-tunnel.outputs.tunnel-url }}"

        - name : creation yaml k3s
          run: sudo echo "${{ secrets.KUBECONFIG }}" >> /home/k3s.yaml

        - name: kubectl remplace server
          run: sed -i 's/https://127.0.0.1:6443/https://${{ steps.expose-tunnel.outputs.tunnel-url }}:6443/g' ./k3s.yaml

        - name: kubectl cp
          run: cp ./k3s.yaml /home/k3s.yaml

        - name: kubectl get node
          run: sudo export KUBECONFIG=/home/k3s.yaml && kubectl get node




#        - name: test curl2
#          run: curl -Ik ${{ secrets.IP2 }}

#        - name: install wireguard
#          run: apt update && apt install wireguard -y

#        - name: config wireguard secret
#          run: echo "${{ secrets.w }}" > privatekey

#        - name: config wireguard 
#          run: |
#            chmod go-r privatekey
            
#        - name: config wireguard 
#          run: |
#            ip link add dev wg0 type wireguard
#            sudo ip addr add 10.1.1.1/32 dev wg0
#            sudo wg set wg0 private-key ./privatekey peer ${{ secrets.wpub }} allowed-ips 10.1.1.0/24 endpoint ${{ secrets.IPPC }}:51820
#            ip link set wg0 up

#        - name: test acces wireguard
#          run: curl -Ik ${{ secrets.IP2 }}

#        - name: install innernet
#          run: apt update && apt install innernet -y

#        - name: config innernet
#          run: |
#            innernet install {{ secrets.wpub }} >> innernet.conf
#            innernet up 
#            innernet sh

#        - name: install headscale
#          run: apt update && apt install headscale -y

#        - name: config headscale
#          run: |
#            headscale init --admin={{ secrets.wpub }} --admin-password={{ secrets.w }} --server={{ secrets.IPPC }}:51820
#            headscale serve



#         - name: installer bore te
#           run: |
#            docker run -i --init --rm -p 6443:643 -p 7835:7835 ekzhang/bore local --port 6443 --to ${{ secrets.IPTUNNELPUB }} 7835
            

#        - name: tar bore
#          run: tar -xvf bore-v0.5.1-x86_64-unknown-linux-musl.tar.gz

#        - name: mv bore+start 
#          run: |
#            mv bore /usr/local/bin
#            ./bore local --port 8080 --to ${{ secrets.IPTUNNEL }}

#        - name: test acces bore
#          run: curl -Ik ${{ secrets.IPTUNNEL }}
          
#        - name: test wget
#          run: wget ${{ secrets.IP2 }} --no-check-certificate

#        - name: install kubectl
#          run: apt update && apt install kubectl -y

#        - name: config kubeconfig
#          run: sudo echo "${{ secrets.KUBECONFIG }}" >> sudo /home/k3s.yaml

#        - name: kubectl get node
#          run: sudo export KUBECONFIG=/home/k3s.yaml && kubectl get node  

#        - name: build
#          run: docker build -t test1 .
#        - name: lance docker
#          run: docker run -it test1 


          


#        - name: cowsay t
#          run: |
#            sudo apt update
#            sudo apt install -y cowsay 

#        - name: cowsay2 
#          run: sudo mv /usr/share/cowsay /apps

#        - name: cowsay
#          run: co

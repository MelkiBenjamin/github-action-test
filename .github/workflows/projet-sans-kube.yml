name: projet contoso local sans kubernetes
on: 
  push:
  workflow_dispatch:

jobs:
  store-front:
    runs-on: ubuntu-latest
    name: A job to say hello
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3.0.2
        id: changes 
        with: 
          filters: | 
            store-front:
              - 'store-front/**'
      - name: docker build 
        if: steps.changes.outputs.store-front == 'true'
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/store-front-test store-front
      - run: docker image ls
      - run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - if: steps.changes.outputs.store-front == 'true'
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/store-front-test

  product-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: dorny/paths-filter@v3.0.2
        id: changes 
        with: 
          filters: | 
            product-service:
              - 'product-service/**'
      - name: docker build
        if: steps.changes.outputs.product-service == 'true'
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/product-service-test2 product-service
      - run: docker image ls
      - run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - if: steps.changes.outputs.product-service == 'true'
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/product-service-test2

  infrastructure:
    runs-on: self-hosted
    steps:
      - name : docker version
        run: docker --version

      - name: docker compose version
        run: docker compose version

  monitoring:
    runs-on: self-hosted
    needs: [infrastructure]
    env:
      test: ls
      tagcompose_grafana: $(docker compose -f ./compose/docker-compose-monitoring.yml config --quiet --images | findstr grafana)
      tagcompose_prometheus: $(docker compose -f ./compose/docker-compose-monitoring.yml config --quiet --images | findstr prometheus)
      tagcompose_cadvisor: $(docker compose -f ./compose/docker-compose-monitoring.yml config --quiet --images | findstr cadvisor)
      latestTag: $((Invoke-RestMethod -Uri "https://registry.hub.docker.com/v2/repositories/grafana/grafana/tags/").results[5].name)
      latestTag_prometheus: $((Invoke-RestMethod -Uri "https://registry.hub.docker.com/v2/repositories/prom/prometheus/tags/").results[5].name)
      latestTag_cadvisor: $((Invoke-RestMethod -Uri "https://gcr.io/v2/cadvisor/cadvisor/tags/list").tags[39])
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          ref: main
          sparse-checkout: |
            compose/docker-compose-monitoring.yml
            compose/docker-compose-monitoring-get.yml
            compose/docker-compose-monitoring-dotnet.yml
            compose/prometheus.yml
            compose/grafana.yml
            compose/datasource.yml
            compose/dashboards.yml
            compose/dashboard2.json
          sparse-checkout-cone-mode: false
      - name: docker-compose methode 1    
        if: runner.os == 'Windows' 
        run: |
          $path_origine = "./compose/docker-compose-monitoring-get.yml"
          $path_destination = "C:/Users/mbenj/Desktop/devops/github action/test github action/github-action-test/compose/docker-compose-monitoring-get.yml"
          ((Get-Content -Path "$path_origine") `
          -replace "${{ env.tagcompose_grafana }}", "grafana/grafana:${{ env.latestTag }}") `
          -replace "${{ env.tagcompose_prometheus }}", "prom/prometheus:${{ env.latestTag_prometheus }}" `
          -replace "${{ env.tagcompose_cadvisor }}", "gcr.io/cadvisor/cadvisor:${{ env.latestTag_cadvisor }}" `
          | Set-Content -Path $path_destination

      - name: docker-compose methhode 2
        if: runner.os == 'Windows'
        run: |
          $path2_origine = "$pwd/compose/docker-compose-monitoring-dotnet.yml"
          $path2_destination = "$pwd/compose/docker-compose-monitoring-dotnet.yml"
          [System.IO.File]::WriteAllText($path2_destination, ([System.IO.File]::ReadAllText($path2_origine) `
          -replace "${{ env.tagcompose_grafana }}", "grafana/grafana:${{ env.latestTag }}" `
          -replace "${{ env.tagcompose_prometheus }}", "prom/prometheus:${{ env.latestTag_prometheus }}" `
          -replace "${{ env.tagcompose_cadvisor }}", "gcr.io/cadvisor/cadvisor:${{ env.latestTag_cadvisor }}"))

      - name: docker-compose methode 3
        if: runner.os == 'linux'
        run: |
          path3_origine="./compose/docker-compose-monitoring-get.yml"
          path3_destination="./compose/docker-compose-monitoring-get.yml"
          sed -i \
          -e "s/${{ env.tagcompose_grafana }}/grafana/grafana:${{ env.latestTag }}/g" \
          -e "s/${{ env.tagcompose_prometheus }}/prom/prometheus:${{ env.latestTag_prometheus }}/g" \
          -e "s/${{ env.tagcompose_cadvisor }}/gcr.io/cadvisor/cadvisor:${{ env.latestTag_cadvisor }}/g" \
          $path3_destination

      - name: install apli monitoring prometheus grafana
        run: docker compose -f ./compose/docker-compose-monitoring.yml up -d

      - name: netoyage job monitoring
        if: always()
        run: |
          Remove-Item -Recurse -Force "${{ github.workspace }}\*" -Exclude "compose/docker-compose-contoso.yml"

  contoso:
    runs-on: self-hosted
    needs: [infrastructure]
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          ref: main
          sparse-checkout: |
            compose/docker-compose-contoso.yml
          sparse-checkout-cone-mode: false
          
      - name: Create Application Contoso docker compose -f
        run: docker compose -f ./compose/docker-compose-contoso.yml up -d

      - name: netoyage job contoso
        if: always()
        run: |
          Remove-Item -Recurse -Force "${{ github.workspace }}\compose/docker-compose-contoso.yml"


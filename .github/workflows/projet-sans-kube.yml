name: projet contoso local sans kubernetes
on: 
  push:
  workflow_dispatch:

jobs:
  store-front:
    runs-on: ubuntu-latest
    name: A job to say hello
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3.0.2
        id: changes 
        with: 
          filters: | 
            store-front:
              - 'store-front/**'
      - name: docker build
        if: steps.changes.outputs.store-front == 'true'
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/store-front-test store-front
      - run: docker image ls
      - run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - if: steps.changes.outputs.store-front == 'true'
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/store-front-test

  product-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: dorny/paths-filter@v3.0.2
        id: changes 
        with: 
          filters: | 
            product-service:
              - 'product-service/**'
      - name: docker build
        if: steps.changes.outputs.product-service == 'true'
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/product-service-test2 product-service
      - run: docker image ls
      - run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - if: steps.changes.outputs.product-service == 'true'
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/product-service-test2

  infrastructure:
    runs-on: self-hosted
    steps:
      - name : docker version
        run: docker --version

      - name: docker-compose version
        run: docker compose version

  monitoring:
    runs-on: self-hosted
    needs: [infrastructure]
    steps:
      - uses: actions/checkout@v4

      - name: compare les image compose
        id: image-grafana
        run: $tagcompose = docker compose -f ./compose/docker-compose-monitoring.yml config --quiet --images | findstr grafana

      - name: compare les tag des image dans dockerhub
        id: dockerhub-grafana
        run: |
          $response = Invoke-RestMethod -Uri "https://registry.hub.docker.com/v2/repositories/grafana/grafana/tags/"
          $latestTag = $response.results[5].name
          echo "Derniere image tag : grafana/grafana:$latestTag"

      - name: docker-compose up
        if: steps.image-grafana.outputs != steps.dockerhub-grafana.outputs
        run: sed -i 's/$tagcompose/$latestTag/g' ./compose/'docker-compose-monitoring - Copie'.yml

      - name: install apli monitoring prometheus grafana
        run: |
          docker compose -f ./compose/docker-compose-monitoring.yml up
 
  contoso:
    runs-on: self-hosted
    needs: [infrastructure]
    steps:
      - uses: actions/checkout@v4            
      - name: Create Application Contoso with Argocd avec namespace
        run: |
          docker compose -f ./compose/docker-compose-contoso.yml up
          